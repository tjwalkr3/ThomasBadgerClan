@inject Lobby lobby

<style>
    .battle-field {
        position: relative;
        height: @(DisplayConstants.MapHeight) px;
        aspect-ratio: 997 / 860;
        background-image: linear-gradient(135deg, rgb(5, 39, 103) 0%, #3a0647 70%);
    }
</style>

@* width: @(DisplayConstants.MapWidth)px; *@
@* height: 100%; *@
@* background-color: rgb(16, 64, 81); *@

<div id="square" class="battle-field" style="">
    @foreach (var row in Enumerable.Range(0, State.Dimension + 1))
    {
        @foreach (var column in Enumerable.Range(0, State.Dimension + 1))
        {
            <HexagonSquare Row=row Col=column Dimension=State.Dimension />
        }

    }
    @foreach (var u in State.Units)
    {
        <UnitComponent Unit=u Team=teams?[u.Team] Dimension=State.Dimension @key=u.Id TickInterval=Lobby.TickInterval />
    }
</div>

@code {
    [Parameter]
    public required GameState State { get; set; }

    private Dictionary<int, Team>? teams;

    protected override void OnParametersSet()
    {
        teams = State.TeamList.ToDictionary(t => t.Id);
        State.GameChanged += (e) => InvokeAsync(StateHasChanged);
    }
}